{"version":3,"sources":["scripts/main.js"],"names":["printMessage","className","text","document","body","insertAdjacentHTML","promise1","Promise","resolve","reject","addEventListener","setTimeout","Error","promise2","promise3","leftClick","rightClick","leftClickListener","checkClicks","rightClickListener","removeEventListener","then","message","catch","error"],"mappings":";AAAA,aAEA,IAAMA,EAAe,SAACC,EAAWC,GAC/BC,SAASC,KAAKC,mBAAmB,YACjBJ,cAAAA,OAAAA,EACVC,oCAAAA,OAAAA,EAFN,kBAOII,EAAW,IAAIC,QAAQ,SAACC,EAASC,GACrCN,SAASO,iBAAiB,QAAS,WACjCF,EAAQ,iCAGVG,WAAW,WACTF,EAAO,IAAIG,MAAM,iCAChB,OAGCC,EAAW,IAAIN,QAAQ,SAACC,GAC5BL,SAASO,iBAAiB,QAAS,WACjCF,EAAQ,kCAGVL,SAASO,iBAAiB,cAAe,WACvCF,EAAQ,oCAINM,EAAW,IAAIP,QAAQ,SAACC,GACxBO,IAAAA,GAAY,EACZC,GAAa,EAEXC,EAAoB,WACxBF,GAAY,EACZG,KAGIC,EAAqB,WACzBH,GAAa,EACbE,KAGIA,EAAc,WACdH,GAAaC,IACfb,SAASiB,oBAAoB,QAASH,GACtCd,SAASiB,oBAAoB,cAAeD,GAC5CX,EAAQ,iCAIZL,SAASO,iBAAiB,QAASO,GACnCd,SAASO,iBAAiB,cAAeS,KAG3Cb,EACGe,KAAK,SAAAC,GAAWtB,OAAAA,EAAa,UAAWsB,KACxCC,MAAM,SAAAC,GAASxB,OAAAA,EAAa,UAAWwB,KAE1CX,EACGQ,KAAK,SAAAC,GAAWtB,OAAAA,EAAa,UAAWsB,KACxCC,MAAM,SAAAC,GAASxB,OAAAA,EAAa,UAAWwB,KAE1CV,EACGO,KAAK,SAAAC,GAAWtB,OAAAA,EAAa,UAAWsB,KACxCC,MAAM,SAAAC,GAASxB,OAAAA,EAAa,UAAWwB","file":"main.baadf4c2.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst printMessage = (className, text) => {\n  document.body.insertAdjacentHTML('beforeend',\n    `<div class=${className} data-qa=\"notification\">\n      ${text}\n    </div>`\n  );\n};\n\nconst promise1 = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('First promise was resolved!');\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected!'));\n  }, 3000);\n});\n\nconst promise2 = new Promise((resolve) => {\n  document.addEventListener('click', () => {\n    resolve('Second promise was resolved!');\n  });\n\n  document.addEventListener('contextmenu', () => {\n    resolve('Second promise was resolved!');\n  });\n});\n\nconst promise3 = new Promise((resolve) => {\n  let leftClick = false;\n  let rightClick = false;\n\n  const leftClickListener = () => {\n    leftClick = true;\n    checkClicks();\n  };\n\n  const rightClickListener = () => {\n    rightClick = true;\n    checkClicks();\n  };\n\n  const checkClicks = () => {\n    if (leftClick && rightClick) {\n      document.removeEventListener('click', leftClickListener);\n      document.removeEventListener('contextmenu', rightClickListener);\n      resolve('Third promise was resolved!');\n    }\n  };\n\n  document.addEventListener('click', leftClickListener);\n  document.addEventListener('contextmenu', rightClickListener);\n});\n\npromise1\n  .then(message => printMessage('success', message))\n  .catch(error => printMessage('warning', error));\n\npromise2\n  .then(message => printMessage('success', message))\n  .catch(error => printMessage('warning', error));\n\npromise3\n  .then(message => printMessage('success', message))\n  .catch(error => printMessage('warning', error));\n"]}